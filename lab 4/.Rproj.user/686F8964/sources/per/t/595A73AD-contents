#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(DT)
library(tidyverse)

# Define server logic required to draw a histogram
function(input, output, session) {

    output$tabla_1 <- renderDataTable({
      mtcars$car_name = row.names(mtcars)
      mtcars %>% 
        datatable(rownames = FALSE,
                  filter = "top",
                  options = list(
                    pageLenth = 5,
                    lengthMenu = c(5,10,25,100)
                  ))
    })

    output$tabla_2 <- renderDataTable({
      diamonds %>% 
        mutate(vol = x*y*z,
               vol_promedio = mean(vol),
               volp = vol/vol_promedio - 1) %>% 
        datatable(filter = "top") %>% 
        formatCurrency(columns = "price", 
                       currency = "$", 
                       interval = 3, 
                       digits = 2) %>% 
      formatPercentage(columns = "volp", digits = 2) %>% 
      formatString(columns = "vol", suffix = "mm")
    })
    
    output$tabla_3 <- renderDataTable({
      mtcars %>% 
        datatable(selection = "single")
    })
    
    output$output_1 <- renderPrint({
      mtcars[input$tabla_3_rows_selected,]
    })
    
    output$tabla_4 <- renderDataTable({
      mtcars %>% 
        datatable(selection = "multiple")
    })
    
    output$output_2 <- renderPrint({
      mtcars[input$tabla_4_rows_selected,]
    })
    
    output$tabla_5 <- renderDataTable({
      mtcars %>% 
        datatable(selection = list(mode = "single", target = "column"))
    })
    
    output$output_3 <- renderPrint({
      input$tabla_5_columns_selected
    })
    
    output$tabla_6 <- renderDataTable({
      mtcars %>% 
        datatable(selection = list(mode = "multiple", target = "column"))
    })
    
    output$output_4 <- renderPrint({
      input$tabla_6_columns_selected
    })
    
    output$tabla_7 <- renderDataTable({
      mtcars %>% 
        datatable(selection = list(mode = "single", target = "cell"))
    })
    
    output$output_5 <- renderPrint({
      input$tabla_7_cells_selected
    })
    
    output$tabla_8 <- renderDataTable({
      mtcars %>% 
        datatable(selection = list(mode = "multiple", target = "cell"))
    })
    
    output$output_6 <- renderPrint({
      input$tabla_8_cells_selected
    })
}



